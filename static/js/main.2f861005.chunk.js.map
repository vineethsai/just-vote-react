{"version":3,"sources":["Components/Header.js","Components/Post.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","isOpen","setState","react_default","a","createElement","reactstrap_es","light","expand","href","onClick","navbar","className","React","Component","Post","require","handleChange","event","preventDefault","value","target","offices","officers","address","handleClick","axios","get","params","key","electionId","then","json","console","log","division","fed","county","local","searchLevel","_this2","i","contest","filter","rows","j","indexOf","undefined","match","map","def_name","pic","undef","dic","can","urls","src","alt","list","renderResults","fluid","inline","aria-label","type","onChange","addonType","addon","getFedValue","getStateValue","getCountyValue","getLocalValue","responsive","App","officials","projects","id","uuid","v4","title","category","getProjects","project","push","index","findIndex","x","splice","Header_Header","noGutters","Components_Post","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2f861005.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n } from 'reactstrap';\r\n\r\nexport default class Header extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      isOpen: false\r\n    };\r\n  }\r\n  toggle() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar  light expand=\"md\">\r\n          <NavbarBrand href=\"/\">Be Informed</NavbarBrand>\r\n          <NavbarToggler onClick={this.toggle} />\r\n          <Collapse isOpen={this.state.isOpen} navbar>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              <NavItem>\r\n                <NavLink href=\"/justvote/\">Just Vote</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink href=\"/justvolu/\">Just Volunteer</NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n          </Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport {\r\n    InputGroup, Container,\r\n    InputGroupAddon,\r\n    Table, Button, Form,\r\n    Input, Row, Col, InputGroupText\r\n} from 'reactstrap';\r\nimport axios from 'axios';\r\nvar _ = require('lodash');\r\nclass Post extends Component {\r\n\r\n  constructor(){\r\n  super()\r\n  this.state = {\r\n        division: [],\r\n        offices: [],\r\n        officers: [],\r\n        address: '',\r\n        fed: false,\r\n        state: false,\r\n        county: false,\r\n        local: false\r\n      }\r\n      \r\n    \r\n  }\r\n \r\n  handleChange = (event) => {    \r\n    event.preventDefault();\r\n    let value = event.target.value;\r\n    this.setState({\r\n        offices: this.state.offices,\r\n        officers: this.state.officers,\r\n        address: value\r\n        // .replace(/ /g,'')\r\n    });\r\n  }\r\n\r\n  handleClick = (event) => {    \r\n    event.preventDefault();\r\n    axios.get('https://www.googleapis.com/civicinfo/v2/representatives',\r\n    {\r\n        'params' : \r\n        {\r\n            'key': 'AIzaSyBsP_HExLE7-6QINDS-5gGHNFyno8FW9F8',\r\n            'electionId' : 2000,\r\n            'address' : this.state.address\r\n        }\r\n    })\r\n    .then(json => {\r\n        console.log(json);\r\n        this.setState({\r\n            officers: json[\"data\"][\"officials\"],\r\n            offices: json[\"data\"][\"offices\"],\r\n            address: this.state.address,\r\n            division: json[\"data\"][\"divisions\"]\r\n        });\r\n    });\r\n  }\r\n\r\n    getFedValue(event) {\r\n        if(this.state.fed)\r\n        {\r\n            this.setState({fed: false});\r\n            console.log(\"fed false\");\r\n        }\r\n        else\r\n        {\r\n            this.setState({fed: true});\r\n            console.log(\"fed true\");\r\n        }\r\n    }\r\n\r\n    getStateValue(event) {\r\n        if(this.state.state)\r\n        {\r\n            this.setState({state: false});\r\n            console.log(\"statefalse\");\r\n        }\r\n        else\r\n        {\r\n            this.setState({state: true});\r\n            console.log(\"state true\");\r\n        }\r\n    }\r\n\r\n    getCountyValue(event) {\r\n        if(this.state.county)\r\n        {\r\n            this.setState({county: false});\r\n            console.log(\"county false\");\r\n        }\r\n        else\r\n        {\r\n            this.setState({county: true});\r\n            console.log(\"county true\");\r\n        }\r\n    }\r\n\r\n    getLocalValue(event) {\r\n        if(this.state.local)\r\n        {\r\n            this.setState({local: false});\r\n            // this.state.local = false;\r\n            console.log(\"local false\");\r\n        }\r\n        else\r\n        {\r\n            this.setState({local: true});\r\n            console.log(\"local true\");\r\n        }\r\n    }\r\n\r\n    renderResults(searchLevel)\r\n    {\r\n        let i = 0;\r\n        let contest = this.state[\"officers\"];\r\n        return this.state.offices.filter(rows =>\r\n        {\r\n            let j = this.state.offices.indexOf(rows);\r\n            return (typeof rows != undefined && this.state.offices[j][\"divisionId\"].match(searchLevel))\r\n        }\r\n        // {\r\n        //     let j = this.state.officers.indexOf(rows);\r\n        //     if(j <= this.state.offices.length - 1)\r\n        //     {\r\n        //         // console.log(this.state.offices[j]['divisionId']);\r\n        //         return(this.state.offices[j]['divisionId'].match(searchLevel));\r\n        //     }}\r\n        ).map(\r\n            offices=>\r\n        {\r\n            \r\n            let def_name = \"unknown\";\r\n            i = this.state.offices.indexOf(offices);\r\n            console.log(offices, i);\r\n            // if(i < this.state.offices.length - 2)\r\n            // {\r\n            //     def_name = this.state.offices[i]['name'];\r\n            // }\r\n          let dic = contest[i];\r\n          let can = dic['name'];\r\n          let pic;\r\n          let urls = dic['urls'];\r\n          pic = 'http://zebconference.com/wp-content/uploads/2018/07/Blank-Person-Image.png';\r\n          if('photoUrl' in dic)\r\n          {\r\n            pic = dic['photoUrl'];\r\n          }\r\n          let undef;\r\n          if('urls' in dic)\r\n          {\r\n              undef = urls[0];\r\n          }\r\n          else\r\n          {\r\n              undef = \"Not provided\"\r\n          }\r\n          def_name = offices['name'];\r\n          return (\r\n              <tr>\r\n                  <td>{can}</td>\r\n                  <td>{ <img  src={pic} alt=\"sen\" className=\"img-responsive\" />}</td>\r\n                  <td>{def_name}</td>\r\n                  <td>{dic[\"party\"]}</td>\r\n                  <td>{undef}</td>\r\n              </tr>\r\n          );\r\n        }\r\n        );\r\n    }\r\n\r\n  render() {\r\n\r\n    var federal_pattern = \"ocd-division/country:us\";\r\n    var state_pattern = /ocd-division\\/country:us\\/state:(\\D{2}$)/;\r\n    var cd_pattern = /ocd-division\\/country:us\\/state:(\\D{2})\\/cd:/;\r\n    var county_pattern = /ocd-division\\/country:us\\/state:\\D{2}\\/county:\\D+/;\r\n    var local_pattern = /ocd-division\\/country:us\\/state:\\D{2}\\/place:\\D+/;\r\n    // console.log(county);\r\n    var list;\r\n    if(this.state.fed)\r\n    {\r\n        list = this.renderResults(federal_pattern);\r\n    }\r\n    if(this.state.state)\r\n    {\r\n        list = this.renderResults(state_pattern);\r\n        list = this.renderResults(cd_pattern);\r\n    }\r\n    if(this.state.county)\r\n    {\r\n        list = this.renderResults(county_pattern);\r\n    }\r\n    if(this.state.local)\r\n    {\r\n        list = this.renderResults(local_pattern);\r\n    }\r\n    if(!this.state.fed && !this.state.state && !this.state.county && !this.state.local)\r\n    {\r\n        list = this.renderResults(\"\");\r\n    }\r\n    \r\n      console.log(this.state);\r\n    return (\r\n        < div className = \"text-center\" >\r\n           <h1 >Just Vote</h1>\r\n           <br />\r\n           <br />\r\n           <h3>\r\n               Enter your address to find and contact your federal, state, county and local elected representatives\r\n           </h3>\r\n           <br />\r\n           <br />\r\n           <Container fluid>\r\n           <Row>\r\n                <Col >\r\n                    <Form inline>\r\n                        <Input aria-label=\"Search\" type=\"text\" onChange={this.handleChange.bind(this)}/>\r\n                        <Button  addonType=\"append\" type=\"submit\" className=\"btn btn-info\"  onClick={this.handleClick.bind(this)}>\r\n                        Submit</Button>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n           </Container>\r\n           <br />\r\n           <div>\r\n                <div className=\"px-5 text-center\">\r\n                <h5 className=\"text-center\">Show level of Government: </h5>\r\n                <br />\r\n                    <InputGroup>\r\n                    <Row>\r\n                        <Col>\r\n                            <InputGroupAddon addonType=\"append\">\r\n                            < InputGroupAddon addonType=\"append\" >Federal</InputGroupAddon>\r\n                            <InputGroupText>\r\n                                <Input addon onClick={this.getFedValue.bind(this)} type=\"checkbox\" aria-label=\"Checkbox for following text input\" />\r\n                            </InputGroupText>\r\n                            </InputGroupAddon>\r\n                            \r\n                        </Col>\r\n                        <Col>\r\n                            <InputGroupAddon addonType=\"append\">\r\n                            < InputGroupAddon  addonType=\"append\">State</InputGroupAddon>\r\n                            <InputGroupText>\r\n                                <Input addon onClick={this.getStateValue.bind(this)} type=\"checkbox\" aria-label=\"Checkbox for following text input\" />\r\n                            </InputGroupText>\r\n                            </InputGroupAddon>\r\n                        </Col>\r\n                        <Col>\r\n                            <InputGroupAddon addonType=\"append\">\r\n                            < InputGroupAddon  addonType=\"append\">County</InputGroupAddon>\r\n                            <InputGroupText>\r\n                                <Input addon onClick={this.getCountyValue.bind(this)} type=\"checkbox\" aria-label=\"Checkbox for following text input\" />\r\n                            </InputGroupText>\r\n                            </InputGroupAddon>\r\n                        </Col>\r\n                        <Col>\r\n                            <InputGroupAddon addonType=\"append\">\r\n                            < InputGroupAddon  addonType=\"append\">Local</InputGroupAddon>\r\n                            <InputGroupText>\r\n                                <Input addon onClick={this.getLocalValue.bind(this)} type=\"checkbox\" aria-label=\"Checkbox for following text input\" />\r\n                            </InputGroupText>\r\n                            </InputGroupAddon>\r\n                        </Col>\r\n                    </Row>\r\n                    </InputGroup>\r\n                </div>\r\n            </div>\r\n           <br />\r\n           <br />\r\n           <Table responsive>\r\n           <thead>\r\n           <tr>\r\n            <th>Official</th>\r\n            <th>Photo</th>\r\n            <th>Office</th>\r\n            <th>Party</th>\r\n            <th>Website</th>\r\n          </tr>\r\n           </thead>\r\n           <tbody>\r\n           {list}\r\n           </tbody>\r\n           \r\n           </Table>\r\n           \r\n        </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default Post;","import React, { Component } from 'react';\nimport uuid from 'uuid';\nimport Header from './Components/Header';\nimport { Container, Row, Col } from 'reactstrap';\nimport Post from './Components/Post'\n\nimport './App.css';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      officials: [],\n      offices: [],\n      address: []\n    }\n  }\n\n\n\n  getProjects(){\n    this.setState({projects: [\n      {\n        id:uuid.v4(),\n        title: 'Business Website',\n        category: 'Web Deisgn'\n      },\n      {\n        id:uuid.v4(),\n        title: 'Social App',\n        category: 'Mobile Development'\n      },\n      {\n        id:uuid.v4(),\n        title: 'Ecommerce Shopping Cart',\n        category: 'Web Development'\n      }\n    ]});\n  }\n\n  componentWillMount(){\n    this.getProjects();\n  }\n\n\n  handleAddProject(project){\n    let projects = this.state.projects;\n    projects.push(project);\n    this.setState({projects:projects});\n  }\n\n  handleDeleteProject(id){\n    let projects = this.state.projects;\n    let index = projects.findIndex(x => x.id === id);\n    projects.splice(index, 1);\n    this.setState({projects:projects});\n  }\n\n  render() {\n    console.log(this.state);\n    return (\n      <div className=\"App\">\n        <Header />\n        <Container className=\"py-3 bg-light px-0\">\n          <Row noGutters className=\"pt-2 pt-md-5 w-100 px-4 px-xl-0 position-relative\">\n            <Col>\n              <Post />\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}